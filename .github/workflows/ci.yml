# ci.yml file for GitHub Actions
name: CI

on: [push, pull_request]

jobs:
  ci_checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "Lint"
            cmd: npm run lint:check
          - name: "Typecheck"
            cmd: npm run typecheck
          - name: "Test"
            # after test, tuck .nyc_output's out.json into coverage for easy storage
            cmd: ./node_modules/cypress/bin/cypress install && npm run test && cp .nyc_output/out.json coverage
          - name: "Test Isolated"
            cmd: ./node_modules/cypress/bin/cypress install && npm run test:isolated
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3

      - name: Retrieve the cached "node_modules" directory (if present)
        uses: actions/cache@v3
        id: node-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies (if the cached directory was not found)
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: ${{ matrix.name }}
        run: ${{ matrix.cmd }}

      - name: upload coverage
        if: ${{ matrix.name == 'Test' || matrix.name == 'Test Isolated' }}
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage-${{matrix.name}}
          path: coverage
          retention-days: 1

  merge_coverage:
    needs: ["ci_checks"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Download coverage
        uses: actions/download-artifact@v3
        with:
          name: test-coverage-Test
          path: coverage/coverage-test

      - name: Download coverage isolated
        uses: actions/download-artifact@v3
        with:
          name: test-coverage-Test Isolated
          path: coverage/coverage-test-isolated

      # at the time of this writing, 'Test Isolated' only gathers .2% more coverage for branches,
      # while having less coverage for others. Still, worthwhile experiment in merging runs
      - name: Merge coverage
        run: |
          npm i -g nyc
          # untuck the out.json from the coverage artifact. As far as I can tell, arbitrarily
          # picking which out.json becomes the basis for coverage is fine
          mkdir .nyc_output && mv coverage/coverage-test/out.json .nyc_output
          nyc merge coverage
          nyc report --report-dir coverage-merged --report=json-summary --report=lcov

      - name: Get coverage badge
        run: |
          shields_io_url=$(cat coverage-merged/coverage-summary.json | python3 .github/scripts/get_coverage_url.py)
          curl $shields_io_url > test-coverage.svg

      - name: Unnest lcov report
        run: mv coverage-merged/lcov-report .

      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage
          path: |
            test-coverage.svg
            lcov-report
          retention-days: 1

  build_docs:
    runs-on: ubuntu-latest
    needs: ["merge_coverage"]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3

      - name: Retrieve the cached "node_modules" directory (if present)
        uses: actions/cache@v3
        id: node-cache
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies (if the cached directory was not found)
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Create the docs directory locally in CI
        run: npm run docs

      - name: Download coverage
        uses: actions/download-artifact@v3
        with:
          name: test-coverage
          path: docs

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: docs
